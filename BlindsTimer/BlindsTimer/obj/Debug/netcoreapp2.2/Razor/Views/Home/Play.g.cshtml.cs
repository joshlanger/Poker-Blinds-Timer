#pragma checksum "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8d360b9944179d4adc459c8e284740288ab06aac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Play), @"mvc.1.0.view", @"/Views/Home/Play.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Play.cshtml", typeof(AspNetCore.Views_Home_Play))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\_ViewImports.cshtml"
using BlindsTimer;

#line default
#line hidden
#line 2 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\_ViewImports.cshtml"
using BlindsTimer.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8d360b9944179d4adc459c8e284740288ab06aac", @"/Views/Home/Play.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1249a1a96d1cdb0052bbc0a5ef5753f5346ac129", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Play : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tournament>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
  
    ViewData["Title"] = "Play"; 

#line default
#line hidden
            BeginContext(60, 1233, true);
            WriteLiteral(@"
<h1>Timer</h1>
<p></p>
<div>
    <button onclick=""levelTimer();"">Start</button>
    <button onclick=""pauseTimer();"">Pause</button>
</div>
<p></p>


<div id=""current"" class=""box-shadow container-fluid"" style=""background-color:darkseagreen; padding:20px; margin-bottom:20px; display:flex; height:200px;"">
    <div class=""col-md-6"" style=""display:flex; flex-direction:column; justify-content: space-between;"">
        <p id=""level"" class=""maintext""></p>
        <p id=""blinds"" class=""maintext""></p>
    </div>
    <div class=""col-md-6"" style=""display:flex; flex-direction:column; align-items:center; justify-content:center"">
        <p id=""timer"" style=""font-size:500%;  font-weight:600; text-shadow:2px 2px 0 #999""></p>
    </div>
</div>

<div id=""next"" class=""container-fluid box-shadow"" style=""display:flex; padding:20px; background-color:lightgrey;"" >
    <div class=""col-md-6"" style=""display:flex; align-items:center"">
        <p style=""font-size:300%;  font-weight:600; text-shadow:2px 2px 0 #999"">");
            WriteLiteral("Up Next:</p>\r\n    </div>\r\n    <div class=\"col-md-6 maintext rightside\">\r\n        <p id=\"nextLevel\"></p>\r\n        <p id=\"nextBlinds\"></p>\r\n    </div>\r\n    \r\n    \r\n</div>\r\n\r\n\r\n<script>\r\n\r\n    let levelMinutes = ");
            EndContext();
            BeginContext(1294, 18, false);
#line 40 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                  Write(Model.LevelMinutes);

#line default
#line hidden
            EndContext();
            BeginContext(1312, 110, true);
            WriteLiteral(";\r\n    let levelSeconds = 0;\r\n    let currentLevel = 0;\r\n    let nextlevel = 1;\r\n\r\n    const blindStructure = ");
            EndContext();
            BeginContext(1423, 76, false);
#line 45 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                      Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(@Model.BlindStructure)));

#line default
#line hidden
            EndContext();
            BeginContext(1499, 203, true);
            WriteLiteral(";\r\n    let timerInterval;\r\n\r\n    function levelTimer() {\r\n\r\n        timerInterval = setInterval(function () {\r\n            if (levelMinutes === 0 && levelSeconds === 0) {\r\n                levelMinutes = ");
            EndContext();
            BeginContext(1703, 18, false);
#line 52 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                          Write(Model.LevelMinutes);

#line default
#line hidden
            EndContext();
            BeginContext(1721, 1808, true);
            WriteLiteral(@";
                levelSeconds = 0;
                currentLevel++;
                nextlevel++;
                displayLevel();
                displayNextLevel();
            }
            else {
                if (levelMinutes > 0 && levelSeconds === 0) {
                    levelMinutes -= 1;
                    levelSeconds = 60;
                    levelSeconds--;
                }
                else {
                    levelSeconds--;
                }

                document.getElementById(""timer"").innerHTML = levelMinutes.toString() + ' : ' + addZero().toString();
            }

        }, 1000);
    }

    function pauseTimer() {
        clearInterval(timerInterval);
    }

    function addZero() {
        if (levelSeconds < 10) {
            let plusZero = '0' + levelSeconds;
            return plusZero;
        }
        return levelSeconds;
    }

    function displayLevel() {
        for (var key in blindStructure) {
            if (key == currentLevel");
            WriteLiteral(@") {
                document.getElementById(""blinds"").innerHTML = 'Blinds ' + blindStructure[key].SmallBlind.toString() + ' / ' + blindStructure[key].BigBlind.toString();
                document.getElementById(""level"").innerHTML = 'Level ' + (currentLevel + 1);
            }
        }
    }
    function displayNextLevel() {
        for (var key in blindStructure) {
            if (key == nextlevel) {
                document.getElementById(""nextBlinds"").innerHTML = 'Blinds ' + blindStructure[key].SmallBlind.toString() + ' / ' + blindStructure[key].BigBlind.toString();
                document.getElementById(""nextLevel"").innerHTML = 'Level ' + (currentLevel + 2);
            } 
        }
    }
    displayLevel();
    displayNextLevel();

</script>




");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tournament> Html { get; private set; }
    }
}
#pragma warning restore 1591
