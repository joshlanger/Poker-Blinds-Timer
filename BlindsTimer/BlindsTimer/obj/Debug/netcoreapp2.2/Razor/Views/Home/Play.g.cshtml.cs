#pragma checksum "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "833bfb840d2795794c69a52cf67edccbd53ee2f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Play), @"mvc.1.0.view", @"/Views/Home/Play.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Play.cshtml", typeof(AspNetCore.Views_Home_Play))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\_ViewImports.cshtml"
using BlindsTimer;

#line default
#line hidden
#line 2 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\_ViewImports.cshtml"
using BlindsTimer.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"833bfb840d2795794c69a52cf67edccbd53ee2f1", @"/Views/Home/Play.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1249a1a96d1cdb0052bbc0a5ef5753f5346ac129", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Play : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tournament>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
  
    ViewData["Title"] = "Play";
    Model.Start();

#line default
#line hidden
            BeginContext(79, 158, true);
            WriteLiteral("\r\n<h1>Play</h1>\r\n<p></p>\r\n<div>\r\n    <button onclick=\"levelTimer();\">Start</button>\r\n    <button onclick=\"pauseTimer();\">Pause</button>\r\n</div>\r\n<p></p>\r\n\r\n\r\n");
            EndContext();
            BeginContext(391, 5, true);
            WriteLiteral(" \r\n\r\n");
            EndContext();
#line 25 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
 foreach (KeyValuePair<int, Level> kvp in Model.BlindStructure)
    {

#line default
#line hidden
            BeginContext(468, 38, true);
            WriteLiteral("        <div>\r\n\r\n            <p>Level ");
            EndContext();
            BeginContext(508, 11, false);
#line 29 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                 Write(kvp.Key + 1);

#line default
#line hidden
            EndContext();
            BeginContext(520, 28, true);
            WriteLiteral("</p>\r\n            <p>Blinds ");
            EndContext();
            BeginContext(549, 18, false);
#line 30 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                 Write(kvp.Value.BigBlind);

#line default
#line hidden
            EndContext();
            BeginContext(567, 3, true);
            WriteLiteral(" / ");
            EndContext();
            BeginContext(571, 20, false);
#line 30 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                                       Write(kvp.Value.SmallBlind);

#line default
#line hidden
            EndContext();
            BeginContext(591, 56, true);
            WriteLiteral("</p>\r\n            <p id=\"timer\"></p>\r\n\r\n        </div>\r\n");
            EndContext();
#line 34 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
    }

#line default
#line hidden
            BeginContext(654, 41, true);
            WriteLiteral("\r\n<script>\r\n\r\n        let levelMinutes = ");
            EndContext();
            BeginContext(696, 18, false);
#line 38 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                      Write(Model.LevelMinutes);

#line default
#line hidden
            EndContext();
            BeginContext(714, 30, true);
            WriteLiteral(";\r\n        let levelSeconds = ");
            EndContext();
            BeginContext(745, 18, false);
#line 39 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                      Write(Model.LevelSeconds);

#line default
#line hidden
            EndContext();
            BeginContext(763, 37, true);
            WriteLiteral(";\r\n\r\n    const tournamentStructure = ");
            EndContext();
            BeginContext(801, 20, false);
#line 41 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                           Write(Model.BlindStructure);

#line default
#line hidden
            EndContext();
            BeginContext(821, 205, true);
            WriteLiteral(";\r\n\r\n    let timerInterval;\r\n\r\n    function levelTimer() {\r\n\r\n        timerInterval = setInterval(function () {\r\n            if (levelMinutes === 0 && levelSeconds === 0) {\r\n                levelMinutes = ");
            EndContext();
            BeginContext(1027, 18, false);
#line 49 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                          Write(Model.LevelMinutes);

#line default
#line hidden
            EndContext();
            BeginContext(1045, 34, true);
            WriteLiteral(";\r\n                levelSeconds = ");
            EndContext();
            BeginContext(1080, 18, false);
#line 50 "C:\Users\Joshua Langer\BlindsTimer\Poker-Blinds-Timer\BlindsTimer\BlindsTimer\Views\Home\Play.cshtml"
                          Write(Model.LevelSeconds);

#line default
#line hidden
            EndContext();
            BeginContext(1098, 846, true);
            WriteLiteral(@";
                
            }
            else {
                if (levelMinutes > 0 && levelSeconds === 0) {
                    levelMinutes -= 1;
                    levelSeconds = 60;
                    levelSeconds--;
                }
                else {
                    levelSeconds--;
                }

                document.getElementById(""timer"").innerHTML = levelMinutes.toString() + ' : ' + addZero().toString();
            }
            
        }, 1000);
    }

    function pauseTimer() {
        clearInterval(timerInterval);
    }

    function addZero() {
        if (levelSeconds < 10) {
            let levelSeconds = '0' + levelSeconds;
            
        }
        return levelSeconds;
    }
    
    function displayLevel() {
        
        
    }
</script>




");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tournament> Html { get; private set; }
    }
}
#pragma warning restore 1591
